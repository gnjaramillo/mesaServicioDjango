# Generated by Django 4.2.14 on 2024-07-12 22:53

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('userTipo', models.CharField(choices=[('Administrativo', 'Administrativo'), ('Instructor', 'Instructor')], db_comment='Tipo de usuario', max_length=15)),
                ('userFoto', models.ImageField(blank=True, db_comment='Foto del Usuario', null=True, upload_to='fotos/')),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Caso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('casCodigo', models.CharField(db_comment='Código único del caso', max_length=20, unique=True)),
                ('casEstado', models.CharField(choices=[('Solicitada', 'Solicitada'), ('En Proceso', 'En Proceso'), ('Finalizada', 'Finalizada')], default='Solicitada', max_length=15)),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
            ],
        ),
        migrations.CreateModel(
            name='OficinaAmbiente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ofiTipo', models.CharField(choices=[('Administrativo', 'Administrativo'), ('Formación', 'Formación')], db_comment='tipo de oficina', max_length=15)),
                ('ofiNombre', models.CharField(db_comment='Nombre de la oficina o ambiente', max_length=50, unique=True)),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
            ],
        ),
        migrations.CreateModel(
            name='SolucionCaso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solProcedimiento', models.TextField(db_comment='Texto del procedimiento realizado en la solución del caso', max_length=2000)),
                ('solTipoSolucion', models.CharField(choices=[('Parcial', 'Parcial'), ('Definitiva', 'Definitiva')], db_comment='Tipo de la solucuín, si es parcial o definitiva', max_length=20)),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
                ('solCaso', models.ForeignKey(db_comment='Hace referencia al caso que genera la solución', on_delete=django.db.models.deletion.PROTECT, to='appMesaServicio.caso')),
            ],
        ),
        migrations.CreateModel(
            name='TipoProcedimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipNombre', models.CharField(db_comment='nombre del tipo de procedimiento', max_length=20, unique=True)),
                ('tipDescripcion', models.TextField(db_comment='Aquí se hace una descripción del tipo de procedimiento', max_length=1000, null=True)),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
            ],
        ),
        migrations.CreateModel(
            name='SolucionCasoTipoProcedimientos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solSolucionCaso', models.ForeignKey(db_comment='Hace referencia a la solución del Caso', on_delete=django.db.models.deletion.PROTECT, to='appMesaServicio.solucioncaso')),
                ('solTipoProcedimiento', models.ForeignKey(db_comment='Hace referencia al tipo de procedimiento de la solución', on_delete=django.db.models.deletion.PROTECT, to='appMesaServicio.tipoprocedimiento')),
            ],
        ),
        migrations.CreateModel(
            name='Solicitud',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solDescripcion', models.TextField(db_comment='Texto que describe las solicitud del empleado', max_length=1000)),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
                ('solOficinaAmbiente', models.ForeignKey(db_comment='Hace referencia a la oficina o ambiente donde se encuentra el equipo de la solicitud', on_delete=django.db.models.deletion.PROTECT, to='appMesaServicio.oficinaambiente')),
                ('solUsuario', models.ForeignKey(db_comment='Hace referencia al empleado que hace la solicitud', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='caso',
            name='casSolicitud',
            field=models.ForeignKey(db_comment='Hace referencia a la solicitud que generó el Caso', on_delete=django.db.models.deletion.PROTECT, to='appMesaServicio.solicitud'),
        ),
        migrations.AddField(
            model_name='caso',
            name='casUsuario',
            field=models.ForeignKey(db_comment='Empleado de soporte técnico asignado al caso', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
    ]
